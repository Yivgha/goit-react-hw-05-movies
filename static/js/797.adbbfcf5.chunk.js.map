{"version":3,"file":"static/js/797.adbbfcf5.chunk.js","mappings":"2MAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,uLAURE,EAAWF,EAAAA,EAAAA,GAAH,kF,mBCTRG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAErBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,GACCA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAACV,EAAD,CAAUW,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAKP,GAA5C,SAAwDI,KADjDD,U,gKCJNK,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAea,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAkBF,EAAaG,IAAI,UAEzCC,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,IAAYH,GACTI,MAAK,SAAAC,GACJ,GAAoB,IAAhBA,EAAKC,OAGP,OAFAC,EAAAA,GAAAA,MAAY,iBACZR,EAAgB,IAGlBH,EAAUS,MAEXG,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAC/B,CAACT,EAAiBD,IAerB,OACE,iCACE,UAAC,KAAD,CAAMY,SAfW,SAAAC,GACnBA,EAAEC,iBACmB,KAAjBnB,EAAMoB,OAIVf,EAAgB,CAAEL,MAAOA,EAAMoB,SAH7BP,EAAAA,GAAAA,MAAY,mBAYZ,WACE,SAAC,KAAD,CAAOQ,KAAK,SAASC,KAAMtB,EAAOuB,SARd,SAAAL,GACxB,IAAMM,EAAON,EAAEO,cAAcC,MAAMC,cACnC1B,EAASuB,OAOL,SAAC,KAAD,CAAKH,KAAK,SAAV,UACE,SAAC,MAAD,UAGJ,SAAC,IAAD,CAAYhC,OAAQA,S,gMC/CbuC,GAAQ3C,EAAAA,EAAAA,GAAO4C,EAAAA,GAAP5C,CAAH,udAsBL6C,EAAO7C,EAAAA,EAAAA,GAAH,mGAOJ8C,EAAO9C,EAAAA,EAAAA,KAAH,0GAOJ+C,EAAM/C,EAAAA,EAAAA,OAAH,2PAeHgD,EAAQhD,EAAAA,EAAAA,MAAH,0C,0MC5CX,SAAeiD,IAAtB,4CAAO,OAAP,oBAAO,sGACiBC,IAAAA,IAAA,yBADjB,uBACGxB,EADH,EACGA,KADH,kBAEEA,EAAKyB,SAFP,kEAKA,SAAe3B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BT,GAA3B,yFACiBmC,IAAAA,IAAA,gCAAmCnC,IADpD,uBACGW,EADH,EACGA,KADH,kBAGEA,EAAKyB,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6B5C,GAA7B,yFACiB0C,IAAAA,IAAA,mBAAsB1C,IADvC,uBACGkB,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBJ,IAAAA,IAAA,kBAAqBI,EAArB,aADlB,uBACG5B,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,yFACiBJ,IAAAA,IAAA,kBAAqBI,EAArB,aADjB,uBACG5B,EADH,EACGA,KADH,kBAGEA,GAHF,kEA9BPwB,IAAAA,SAAAA,QAAAA,gBACE,kDACFA,IAAAA,SAAAA,QAAyB,6BAEzBA,IAAAA,SAAAA,OAAwB,CACtBM,QAAS","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx","pages/Pages.styled.js","service/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmItem = styled(Link)`\n  font-size: 20px;\n  color: darkslategray;\n  transition: 0.3s ease-in;\n  text-decoration: underline;\n  &:hover {\n    background: rgb(66, 135, 245);\n  }\n`;\n\nexport const FilmList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;","import PropTypes from 'prop-types';\nimport { FilmItem, FilmList } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n\n  const location = useLocation();\n\n  return (\n    <FilmList>\n      {movies &&\n        movies.map(({ id, title }) => (\n          <li key={id}>\n            <FilmItem to={`/movies/${id}`} state={{from:location}}>{title}</FilmItem>\n          </li>\n        ))}\n    </FilmList>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { BsSearch } from 'react-icons/bs';\nimport { MoviesList } from '../components/MoviesList';\nimport { SearchMovie } from 'service/Api';\nimport { Form, Btn, Input } from './Pages.styled';\n\nexport const MoviePage = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentPosition = searchParams.get('query');\n\n  useEffect(() => {\n    if (!currentPosition) return;\n    SearchMovie(currentPosition)\n      .then(data => {\n        if (data.length === 0) {\n          toast.error('No found');\n          setSearchParams({});\n          return;\n        }\n        setMovies(data);\n      })\n      .catch(error => console.error(error));\n  }, [currentPosition, setSearchParams]);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Enter the text');\n      return;\n    }\n    setSearchParams({ query: query.trim() });\n  };\n  const handelInputChange = e => {\n    const text = e.currentTarget.value.toLowerCase();\n    setQuery(text);\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmitForm}>\n        <Input type=\"search\" name={query} onChange={handelInputChange} />\n        <Btn type=\"submit\">\n          <BsSearch />\n        </Btn>\n      </Form>\n      <MoviesList movies={movies} />\n    </>\n  );\n};","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Links = styled(NavLink)`\nbackground: rgb(163, 226, 255);\nfont-size: 15px;\nfont-weight: 500;\n  border: 2px solid #f5f5f5;\n  display: flex;\n  padding: 8px 12px;\n  width: 60px;\n  border-radius: 4px;\n  overflow: hidden;\n  justify-content: space-evenly;\n  align-items: center;\n  transition: All 0.3s ease;\n  &.active {\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.2);\n    background: rgb(43, 188, 255);\n  }\n  &:hover {\n    background: rgb(163, 226, 255);\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n flex-direction: column;\n padding:  10px;\n gap: 5px;\n `;\n\nexport const Form = styled.form`\n margin-bottom: 20px;\n  margin-top: 20px;\n  display: flex;\n  outline: none;\n  `;\n\nexport const Btn = styled.button`\nmargin-left:10px;\nwidth: 30px;\nheight: 30px;\n  display: block;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  background: rgb(163, 226, 255);\n  &:hover {\n   \n    background: rgb(43, 188, 255);\n  }\n`;\n\nexport const Input = styled.input`\n  height: 28px;\n`;","import axios from 'axios';\n\naxios.defaults.headers['Content-Type'] =\n  'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\naxios.defaults.params = {\n  api_key: '8e0288e6c002e9adeca41ab040f8eda1',\n};\n\nexport async function TrendingMovies() {\n  const { data }= await axios.get(`/3/trending/movie/day`);\n  return data.results;\n};\n\nexport async function SearchMovie(query) {\n  const { data }= await axios.get(`/3/search/movie?query=${query}`);\n\n  return data.results;\n};\n\nexport async function DetailsMovies(id) {\n  const { data }= await axios.get(`/3/movie/${id}`);\n  return data;\n};\n\nexport async function CreditsMovie(movie_id) {\n  const { data } = await axios.get(`3/movie/${movie_id}/credits`);\n\n  return data;\n};\n\nexport async function ReviewsMovie(movie_id) {\n  const { data }= await axios.get(`3/movie/${movie_id}/reviews`);\n\n  return data;\n};"],"names":["FilmItem","styled","Link","FilmList","MoviesList","movies","location","useLocation","map","id","title","to","state","from","MoviePage","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","currentPosition","get","useEffect","SearchMovie","then","data","length","toast","catch","error","console","onSubmit","e","preventDefault","trim","type","name","onChange","text","currentTarget","value","toLowerCase","Links","NavLink","List","Form","Btn","Input","TrendingMovies","axios","results","DetailsMovies","CreditsMovie","movie_id","ReviewsMovie","api_key"],"sourceRoot":""}