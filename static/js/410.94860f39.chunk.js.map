{"version":3,"file":"static/js/410.94860f39.chunk.js","mappings":"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","sources":["service/getGenres.js","components/Backlink/BackLink.styled.js","components/Backlink/Backlink.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","pages/Pages.styled.js","service/Api.js"],"sourcesContent":["const genres = {\n  28: {\n    en: 'Action',\n    uk: 'Бойовик',\n  },\n  12: {\n    en: 'Adventure',\n    uk: 'Пригоди',\n  },\n  16: {\n    en: 'Animation',\n    uk: 'Анімація',\n  },\n  35: {\n    en: 'Comedy',\n    uk: 'Комедія',\n  },\n  80: {\n    en: 'Crime',\n    uk: 'Кримінальний',\n  },\n  99: {\n    en: 'Documentary',\n    uk: 'Документальний',\n  },\n  18: {\n    en: 'Drama',\n    uk: 'Драма',\n  },\n  10751: {\n    en: 'Family',\n    uk: 'Сімейний',\n  },\n  14: {\n    en: 'Fantasy',\n    uk: 'Фентазі',\n  },\n  36: {\n    en: 'History',\n    uk: 'Історичний',\n  },\n  27: {\n    en: 'Horror',\n    uk: 'Жахи',\n  },\n  10402: {\n    en: 'Music',\n    uk: 'Мюзикл',\n  },\n  9648: {\n    en: 'Mystery',\n    uk: 'Містичний',\n  },\n  10749: {\n    en: 'Romance',\n    uk: 'Мелодрама',\n  },\n  878: {\n    en: 'Science Fiction',\n    uk: 'Наукова фантастика',\n  },\n  10770: {\n    en: 'TV Movie',\n    uk: 'ТБ фільм',\n  },\n  53: {\n    en: 'Thriller',\n    uk: 'Трилер',\n  },\n  10752: {\n    en: 'War',\n    uk: 'Воєнний',\n  },\n  37: {\n    en: 'Western',\n    uk: 'Вестерн',\n  },\n};\n\nexport const getGenres = list => {\n    if (!list) return '';\n    const language = window.location.hash.substring(1);\n    const g = [];\n\n     for (const re of list) {\n    if (g.length === 2) {\n      g.push('...');\n      break;\n    }\n\n    if (typeof re === 'object') {\n      g.push(re.name);\n      continue;\n    }\n\n    if (!genres[re]) continue;\n\n    g.push(genres[re][language]);\n  }\n\n  return g.map(g => `${g}`).join(', ');\n};","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkBackStyle = styled(NavLink)`\n  display: flex;\n text-decoration: none;\n  color: black;\n  font-weight: 500;\n  background: rgb(163, 226, 255);\n  &:hover {\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.2);\n    background: rgb(43, 188, 255);\n  }\n`;\n\nexport const BtnBack = styled.button`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 0 2px;\n  margin: 5px 3px 5px 0;\n    width: 100px;\n    height: 30px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  background: rgb(163, 226, 255);\n  &:hover {\n    background: rgb(43, 188, 255);\n  }\n`;\n","import { LinkBackStyle, BtnBack} from \"./BackLink.styled\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nexport const BackLink = ({href}) => {\n    return (\n\n    <BtnBack type=\"submit\"> \n        <AiOutlineArrowLeft  /><LinkBackStyle to={href}>Go back</LinkBackStyle>\n    </BtnBack>\n  )\n}","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  display: flex;\n  width: 1200;\n  margin: 0 auto;\n  padding: 15px;\n  border: 2px solid #f5f5f5;\n  background: white;\n  font-family: 'Open Sans';\n  transition: 0.3s ease-in;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 300px;\n  height: 100%;\n  margin-right: 30px;\n`;\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n  width: 600px;\n`;\n\nexport const TitleOption = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const TextOption = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n`;","import { useEffect, useState, useRef } from 'react';\nimport { useParams, Outlet, Navigate, useLocation } from 'react-router-dom';\nimport { Links, List } from '../../pages/Pages.styled';\nimport { DetailsMovies } from '../../service/Api';\nimport { getGenres } from 'service/getGenres';\nimport { BackLink } from 'components/Backlink';\n\nimport {\n  Image,\n  Section,\n  ListWrapper,\n  TitleOption,\n  TextOption,\n} from './MovieDetails.styled';\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const { title, poster_path, vote_average, overview, genres } = movie;\n \n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    DetailsMovies(movieId)\n      .then(data => {\n        if (data.length !== 0) {\n          return setMovie(data);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        setError(true);\n      });\n  }, [movieId]);\n\n  const location = useLocation();\n  const href = location.state?.from ?? '/';\n  const search = useRef(location.state?.from?.search);\n\n  return (\n    <>\n      {error && <Navigate to=\"/\" replace />}\n\n      <BackLink href={href} />\n      {movie.length !== 0 && (\n        <>\n          <Section>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n            <ListWrapper>\n              <h1>{title}</h1>\n              <TitleOption>User score:</TitleOption>\n              <TextOption> { Math.floor(vote_average * 10) }%</TextOption>\n              <TitleOption>Overview: </TitleOption>\n              <TextOption>{overview}</TextOption>\n              <TitleOption>Genres:</TitleOption>\n              <TextOption> {getGenres(genres)}</TextOption>\n            </ListWrapper>\n          </Section>\n          <List>\n            <h3>Additional information:</h3>\n            <li>\n              <Links\n                to=\"cast\"\n                state={{\n                  from: search.current ? `/movies${search.current}` : '/',\n                }}\n              >\n                Cast\n              </Links>\n            </li>\n            <li>\n              <Links\n                to=\"reviews\"\n                state={{\n                  from: search.current ? `/movies${search.current}` : '/',\n                }}>\n                Reviews\n              </Links>\n            </li>\n          </List>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}","import { MovieDetails } from 'components/MovieDetails';\n\nexport const MovieDetailsPage = () => {\n  return (\n    <>\n      <MovieDetails />\n    </>\n  );\n};","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Links = styled(NavLink)`\nbackground: rgb(163, 226, 255);\nfont-size: 15px;\nfont-weight: 500;\n  border: 2px solid #f5f5f5;\n  display: flex;\n  padding: 8px 12px;\n  width: 60px;\n  border-radius: 4px;\n  overflow: hidden;\n  justify-content: space-evenly;\n  align-items: center;\n  transition: All 0.3s ease;\n  &.active {\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.2);\n    background: rgb(43, 188, 255);\n  }\n  &:hover {\n    background: rgb(163, 226, 255);\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n flex-direction: column;\n padding:  10px;\n gap: 5px;\n `;\n\nexport const Form = styled.form`\n margin-bottom: 20px;\n  margin-top: 20px;\n  display: flex;\n  outline: none;\n  `;\n\nexport const Btn = styled.button`\nmargin-left:10px;\nwidth: 30px;\nheight: 30px;\n  display: block;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  background: rgb(163, 226, 255);\n  &:hover {\n   \n    background: rgb(43, 188, 255);\n  }\n`;\n\nexport const Input = styled.input`\n  height: 28px;\n`;","import axios from 'axios';\n\naxios.defaults.headers['Content-Type'] =\n  'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\naxios.defaults.params = {\n  api_key: '8e0288e6c002e9adeca41ab040f8eda1',\n};\n\nexport async function TrendingMovies() {\n  const { data }= await axios.get(`/3/trending/movie/day`);\n  return data.results;\n};\n\nexport async function SearchMovie(query) {\n  const { data }= await axios.get(`/3/search/movie?query=${query}`);\n\n  return data.results;\n};\n\nexport async function DetailsMovies(id) {\n  const { data }= await axios.get(`/3/movie/${id}`);\n  return data;\n};\n\nexport async function CreditsMovie(movie_id) {\n  const { data } = await axios.get(`3/movie/${movie_id}/credits`);\n\n  return data;\n};\n\nexport async function ReviewsMovie(movie_id) {\n  const { data }= await axios.get(`3/movie/${movie_id}/reviews`);\n\n  return data;\n};"],"names":["genres","en","uk","getGenres","list","language","window","location","hash","substring","g","re","length","push","name","map","join","LinkBackStyle","styled","NavLink","BtnBack","BackLink","href","type","to","Section","Image","ListWrapper","TitleOption","TextOption","MovieDetails","useState","movie","setMovie","movieId","useParams","title","poster_path","vote_average","overview","error","setError","useEffect","DetailsMovies","then","data","catch","console","useLocation","state","from","search","useRef","replace","src","alt","Math","floor","current","MovieDetailsPage","Links","List","Form","Btn","Input","TrendingMovies","axios","results","SearchMovie","query","id","CreditsMovie","movie_id","ReviewsMovie","api_key"],"sourceRoot":""}